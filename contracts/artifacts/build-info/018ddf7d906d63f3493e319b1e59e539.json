{
	"id": "018ddf7d906d63f3493e319b1e59e539",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ExampleMappingStruct.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\ncontract MappingStructExample {\r\n\r\n    //obiettivo è storare tutti i principali dati di ogni deposito/withdrawal\r\n    // per farlo, usiamo una combinazione di struct e mapping\r\n\r\n    struct Transaction {\r\n        //storiamo le transazioni, che siano depositi o withdrawal\r\n        uint amount;\r\n        uint timestamp;\r\n    }\r\n\r\n    struct Balance {\r\n        //non storiamo il balance in un semplice uint in quanto vogliamo salvare più informazioni\r\n        //aggiorniamo il balance quando avviene una transazione\r\n\r\n        uint totalBalance;\r\n\r\n        uint numOfDeposits;\r\n        //salviamo i depositi nel mapping\r\n        //  (l'uint qui indica il numero di deposito, ovvero 0 sarà il primo, 1 il secondo e così via...)\r\n        mapping(uint => Transaction) deposits;\r\n\r\n        uint numOfWithdrawals;\r\n        //salviamo i withdrawal nel mapping\r\n        //  (l'uint qui indica il numero di withdrawal, ovvero 0 sarà il primo, 1 il secondo e così via...)\r\n        mapping(uint => Transaction) withdrawals;\r\n    }\r\n\r\n    //mappo ogni address con un oggetto Balance\r\n    mapping(address => Balance) balances;\r\n\r\n    function depositMoney() public payable {\r\n        //accedo al totalBalance di un singolo address contenuto nel mapping \"balances\"\r\n        // e ne incremento il valore\r\n        balances[msg.sender].totalBalance += msg.value;\r\n\r\n        //salvo la nuova transazione (in questo caso \"deposit\" nello struct delle transazioni)\r\n        Transaction memory deposit = Transaction(msg.value, block.timestamp);\r\n\r\n        //voglio scrivere nel mapping \"deposits\": come chiave metto il valore della variabile \"numOfDeposits\" che ne stabilirà la posizione:\r\n        // (al primo deposito il valore sarà 0, nel mapping \"deposits\" verrà salvata al primo posto e così via...)\r\n        balances[msg.sender].deposits[balances[msg.sender].numOfDeposits] = deposit;\r\n\r\n        //incremento il numero di depositi, così che la prossima volta che chiamo la funzione depositMoney,\r\n        // questo, ovvero    .deposits[balances[msg.sender].numOfDeposits]    sarà 1 in più\r\n        balances[msg.sender].numOfDeposits++;\r\n    }\r\n\r\n    function withdrawMoney(address payable _to, uint _amount) public {\r\n        \r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ExampleMappingStruct.sol": {
				"MappingStructExample": {
					"abi": [
						{
							"inputs": [],
							"name": "depositMoney",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdrawMoney",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ExampleMappingStruct.sol\":74:2306  contract MappingStructExample {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ExampleMappingStruct.sol\":74:2306  contract MappingStructExample {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x16c05aa2\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xf274c897\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ExampleMappingStruct.sol\":1200:2212  function depositMoney() public payable {\r... */\n    tag_2:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n        /* \"contracts/ExampleMappingStruct.sol\":2220:2303  function withdrawMoney(address payable _to, uint _amount) public {\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_6:\n      pop\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/ExampleMappingStruct.sol\":1200:2212  function depositMoney() public payable {\r... */\n    tag_5:\n        /* \"contracts/ExampleMappingStruct.sol\":1414:1423  msg.value */\n      callvalue\n        /* \"contracts/ExampleMappingStruct.sol\":1377:1385  balances */\n      0x00\n        /* \"contracts/ExampleMappingStruct.sol\":1377:1397  balances[msg.sender] */\n      dup1\n        /* \"contracts/ExampleMappingStruct.sol\":1386:1396  msg.sender */\n      caller\n        /* \"contracts/ExampleMappingStruct.sol\":1377:1397  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ExampleMappingStruct.sol\":1377:1410  balances[msg.sender].totalBalance */\n      0x00\n      add\n      0x00\n        /* \"contracts/ExampleMappingStruct.sol\":1377:1423  balances[msg.sender].totalBalance += msg.value */\n      dup3\n      dup3\n      sload\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ExampleMappingStruct.sol\":1532:1558  Transaction memory deposit */\n      0x00\n        /* \"contracts/ExampleMappingStruct.sol\":1561:1600  Transaction(msg.value, block.timestamp) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/ExampleMappingStruct.sol\":1573:1582  msg.value */\n      callvalue\n        /* \"contracts/ExampleMappingStruct.sol\":1561:1600  Transaction(msg.value, block.timestamp) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/ExampleMappingStruct.sol\":1584:1599  block.timestamp */\n      timestamp\n        /* \"contracts/ExampleMappingStruct.sol\":1561:1600  Transaction(msg.value, block.timestamp) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/ExampleMappingStruct.sol\":1532:1600  Transaction memory deposit = Transaction(msg.value, block.timestamp) */\n      swap1\n      pop\n        /* \"contracts/ExampleMappingStruct.sol\":1943:1950  deposit */\n      dup1\n        /* \"contracts/ExampleMappingStruct.sol\":1875:1883  balances */\n      0x00\n        /* \"contracts/ExampleMappingStruct.sol\":1875:1895  balances[msg.sender] */\n      dup1\n        /* \"contracts/ExampleMappingStruct.sol\":1884:1894  msg.sender */\n      caller\n        /* \"contracts/ExampleMappingStruct.sol\":1875:1895  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ExampleMappingStruct.sol\":1875:1904  balances[msg.sender].deposits */\n      0x02\n      add\n        /* \"contracts/ExampleMappingStruct.sol\":1875:1940  balances[msg.sender].deposits[balances[msg.sender].numOfDeposits] */\n      0x00\n        /* \"contracts/ExampleMappingStruct.sol\":1905:1913  balances */\n      dup1\n        /* \"contracts/ExampleMappingStruct.sol\":1905:1925  balances[msg.sender] */\n      0x00\n        /* \"contracts/ExampleMappingStruct.sol\":1914:1924  msg.sender */\n      caller\n        /* \"contracts/ExampleMappingStruct.sol\":1905:1925  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ExampleMappingStruct.sol\":1905:1939  balances[msg.sender].numOfDeposits */\n      0x01\n      add\n      sload\n        /* \"contracts/ExampleMappingStruct.sol\":1875:1940  balances[msg.sender].deposits[balances[msg.sender].numOfDeposits] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ExampleMappingStruct.sol\":1875:1950  balances[msg.sender].deposits[balances[msg.sender].numOfDeposits] = deposit */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/ExampleMappingStruct.sol\":2168:2176  balances */\n      0x00\n        /* \"contracts/ExampleMappingStruct.sol\":2168:2188  balances[msg.sender] */\n      dup1\n        /* \"contracts/ExampleMappingStruct.sol\":2177:2187  msg.sender */\n      caller\n        /* \"contracts/ExampleMappingStruct.sol\":2168:2188  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ExampleMappingStruct.sol\":2168:2202  balances[msg.sender].numOfDeposits */\n      0x01\n      add\n      0x00\n        /* \"contracts/ExampleMappingStruct.sol\":2168:2204  balances[msg.sender].numOfDeposits++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_14\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/ExampleMappingStruct.sol\":1239:2212  {\r... */\n      pop\n        /* \"contracts/ExampleMappingStruct.sol\":1200:2212  function depositMoney() public payable {\r... */\n      jump\t// out\n        /* \"contracts/ExampleMappingStruct.sol\":2220:2303  function withdrawMoney(address payable _to, uint _amount) public {\r... */\n    tag_10:\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:162   */\n    tag_18:\n        /* \"#utility.yul\":61:66   */\n      0x00\n        /* \"#utility.yul\":99:105   */\n      dup2\n        /* \"#utility.yul\":86:106   */\n      calldataload\n        /* \"#utility.yul\":77:106   */\n      swap1\n      pop\n        /* \"#utility.yul\":115:156   */\n      tag_20\n        /* \"#utility.yul\":150:155   */\n      dup2\n        /* \"#utility.yul\":115:156   */\n      tag_21\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":7:162   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":168:307   */\n    tag_22:\n        /* \"#utility.yul\":214:219   */\n      0x00\n        /* \"#utility.yul\":252:258   */\n      dup2\n        /* \"#utility.yul\":239:259   */\n      calldataload\n        /* \"#utility.yul\":230:259   */\n      swap1\n      pop\n        /* \"#utility.yul\":268:301   */\n      tag_24\n        /* \"#utility.yul\":295:300   */\n      dup2\n        /* \"#utility.yul\":268:301   */\n      tag_25\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":168:307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":313:803   */\n    tag_9:\n        /* \"#utility.yul\":389:395   */\n      0x00\n        /* \"#utility.yul\":397:403   */\n      dup1\n        /* \"#utility.yul\":446:448   */\n      0x40\n        /* \"#utility.yul\":434:443   */\n      dup4\n        /* \"#utility.yul\":425:432   */\n      dup6\n        /* \"#utility.yul\":421:444   */\n      sub\n        /* \"#utility.yul\":417:449   */\n      slt\n        /* \"#utility.yul\":414:533   */\n      iszero\n      tag_27\n      jumpi\n        /* \"#utility.yul\":452:531   */\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":414:533   */\n    tag_27:\n        /* \"#utility.yul\":572:573   */\n      0x00\n        /* \"#utility.yul\":597:658   */\n      tag_30\n        /* \"#utility.yul\":650:657   */\n      dup6\n        /* \"#utility.yul\":641:647   */\n      dup3\n        /* \"#utility.yul\":630:639   */\n      dup7\n        /* \"#utility.yul\":626:648   */\n      add\n        /* \"#utility.yul\":597:658   */\n      tag_18\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":587:658   */\n      swap3\n      pop\n        /* \"#utility.yul\":543:668   */\n      pop\n        /* \"#utility.yul\":707:709   */\n      0x20\n        /* \"#utility.yul\":733:786   */\n      tag_31\n        /* \"#utility.yul\":778:785   */\n      dup6\n        /* \"#utility.yul\":769:775   */\n      dup3\n        /* \"#utility.yul\":758:767   */\n      dup7\n        /* \"#utility.yul\":754:776   */\n      add\n        /* \"#utility.yul\":733:786   */\n      tag_22\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":723:786   */\n      swap2\n      pop\n        /* \"#utility.yul\":678:796   */\n      pop\n        /* \"#utility.yul\":313:803   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":890:1195   */\n    tag_13:\n        /* \"#utility.yul\":930:933   */\n      0x00\n        /* \"#utility.yul\":949:969   */\n      tag_35\n        /* \"#utility.yul\":967:968   */\n      dup3\n        /* \"#utility.yul\":949:969   */\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":944:969   */\n      swap2\n      pop\n        /* \"#utility.yul\":983:1003   */\n      tag_37\n        /* \"#utility.yul\":1001:1002   */\n      dup4\n        /* \"#utility.yul\":983:1003   */\n      tag_36\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":978:1003   */\n      swap3\n      pop\n        /* \"#utility.yul\":1137:1138   */\n      dup3\n        /* \"#utility.yul\":1069:1135   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1065:1139   */\n      sub\n        /* \"#utility.yul\":1062:1063   */\n      dup3\n        /* \"#utility.yul\":1059:1140   */\n      gt\n        /* \"#utility.yul\":1056:1163   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":1143:1161   */\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":1056:1163   */\n    tag_38:\n        /* \"#utility.yul\":1187:1188   */\n      dup3\n        /* \"#utility.yul\":1184:1185   */\n      dup3\n        /* \"#utility.yul\":1180:1189   */\n      add\n        /* \"#utility.yul\":1173:1189   */\n      swap1\n      pop\n        /* \"#utility.yul\":890:1195   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1201:1305   */\n    tag_41:\n        /* \"#utility.yul\":1246:1253   */\n      0x00\n        /* \"#utility.yul\":1275:1299   */\n      tag_43\n        /* \"#utility.yul\":1293:1298   */\n      dup3\n        /* \"#utility.yul\":1275:1299   */\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1264:1299   */\n      swap1\n      pop\n        /* \"#utility.yul\":1201:1305   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1311:1437   */\n    tag_44:\n        /* \"#utility.yul\":1348:1355   */\n      0x00\n        /* \"#utility.yul\":1388:1430   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1381:1386   */\n      dup3\n        /* \"#utility.yul\":1377:1431   */\n      and\n        /* \"#utility.yul\":1366:1431   */\n      swap1\n      pop\n        /* \"#utility.yul\":1311:1437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1443:1520   */\n    tag_36:\n        /* \"#utility.yul\":1480:1487   */\n      0x00\n        /* \"#utility.yul\":1509:1514   */\n      dup2\n        /* \"#utility.yul\":1498:1514   */\n      swap1\n      pop\n        /* \"#utility.yul\":1443:1520   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1526:1759   */\n    tag_15:\n        /* \"#utility.yul\":1565:1568   */\n      0x00\n        /* \"#utility.yul\":1588:1612   */\n      tag_48\n        /* \"#utility.yul\":1606:1611   */\n      dup3\n        /* \"#utility.yul\":1588:1612   */\n      tag_36\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1579:1612   */\n      swap2\n      pop\n        /* \"#utility.yul\":1634:1700   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1627:1632   */\n      dup3\n        /* \"#utility.yul\":1624:1701   */\n      eq\n        /* \"#utility.yul\":1621:1724   */\n      iszero\n      tag_49\n      jumpi\n        /* \"#utility.yul\":1704:1722   */\n      tag_50\n      tag_40\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1621:1724   */\n    tag_49:\n        /* \"#utility.yul\":1751:1752   */\n      0x01\n        /* \"#utility.yul\":1744:1749   */\n      dup3\n        /* \"#utility.yul\":1740:1753   */\n      add\n        /* \"#utility.yul\":1733:1753   */\n      swap1\n      pop\n        /* \"#utility.yul\":1526:1759   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1765:1945   */\n    tag_40:\n        /* \"#utility.yul\":1813:1890   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1810:1811   */\n      0x00\n        /* \"#utility.yul\":1803:1891   */\n      mstore\n        /* \"#utility.yul\":1910:1914   */\n      0x11\n        /* \"#utility.yul\":1907:1908   */\n      0x04\n        /* \"#utility.yul\":1900:1915   */\n      mstore\n        /* \"#utility.yul\":1934:1938   */\n      0x24\n        /* \"#utility.yul\":1931:1932   */\n      0x00\n        /* \"#utility.yul\":1924:1939   */\n      revert\n        /* \"#utility.yul\":2074:2191   */\n    tag_29:\n        /* \"#utility.yul\":2183:2184   */\n      0x00\n        /* \"#utility.yul\":2180:2181   */\n      dup1\n        /* \"#utility.yul\":2173:2185   */\n      revert\n        /* \"#utility.yul\":2197:2335   */\n    tag_21:\n        /* \"#utility.yul\":2278:2310   */\n      tag_56\n        /* \"#utility.yul\":2304:2309   */\n      dup2\n        /* \"#utility.yul\":2278:2310   */\n      tag_41\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":2271:2276   */\n      dup2\n        /* \"#utility.yul\":2268:2311   */\n      eq\n        /* \"#utility.yul\":2258:2329   */\n      tag_57\n      jumpi\n        /* \"#utility.yul\":2325:2326   */\n      0x00\n        /* \"#utility.yul\":2322:2323   */\n      dup1\n        /* \"#utility.yul\":2315:2327   */\n      revert\n        /* \"#utility.yul\":2258:2329   */\n    tag_57:\n        /* \"#utility.yul\":2197:2335   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2341:2463   */\n    tag_25:\n        /* \"#utility.yul\":2414:2438   */\n      tag_59\n        /* \"#utility.yul\":2432:2437   */\n      dup2\n        /* \"#utility.yul\":2414:2438   */\n      tag_36\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":2407:2412   */\n      dup2\n        /* \"#utility.yul\":2404:2439   */\n      eq\n        /* \"#utility.yul\":2394:2457   */\n      tag_60\n      jumpi\n        /* \"#utility.yul\":2453:2454   */\n      0x00\n        /* \"#utility.yul\":2450:2451   */\n      dup1\n        /* \"#utility.yul\":2443:2455   */\n      revert\n        /* \"#utility.yul\":2394:2457   */\n    tag_60:\n        /* \"#utility.yul\":2341:2463   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205c7e1bc242735e9dd159d70d70bd564473e963a18456f97e61bdac83bd7f2fa064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506103b8806100206000396000f3fe6080604052600436106100295760003560e01c806316c05aa21461002e578063f274c89714610038575b600080fd5b610036610061565b005b34801561004457600080fd5b5061005f600480360381019061005a9190610205565b6101d7565b005b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546100b29190610245565b9250508190555060006040518060400160405280348152602001428152509050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154815260200190815260200160002060008201518160000155602082015181600101559050506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008154809291906101cf906102d7565b919050555050565b5050565b6000813590506101ea81610354565b92915050565b6000813590506101ff8161036b565b92915050565b6000806040838503121561021c5761021b61034f565b5b600061022a858286016101db565b925050602061023b858286016101f0565b9150509250929050565b6000610250826102cd565b915061025b836102cd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156102905761028f610320565b5b828201905092915050565b60006102a6826102ad565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006102e2826102cd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561031557610314610320565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b61035d8161029b565b811461036857600080fd5b50565b610374816102cd565b811461037f57600080fd5b5056fea26469706673582212205c7e1bc242735e9dd159d70d70bd564473e963a18456f97e61bdac83bd7f2fa064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16C05AA2 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xF274C897 EQ PUSH2 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36 PUSH2 0x61 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A SWAP2 SWAP1 PUSH2 0x205 JUMP JUMPDEST PUSH2 0x1D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x245 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLVALUE DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1CF SWAP1 PUSH2 0x2D7 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EA DUP2 PUSH2 0x354 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FF DUP2 PUSH2 0x36B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21C JUMPI PUSH2 0x21B PUSH2 0x34F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22A DUP6 DUP3 DUP7 ADD PUSH2 0x1DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23B DUP6 DUP3 DUP7 ADD PUSH2 0x1F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x250 DUP3 PUSH2 0x2CD JUMP JUMPDEST SWAP2 POP PUSH2 0x25B DUP4 PUSH2 0x2CD JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x290 JUMPI PUSH2 0x28F PUSH2 0x320 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A6 DUP3 PUSH2 0x2AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E2 DUP3 PUSH2 0x2CD JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x315 JUMPI PUSH2 0x314 PUSH2 0x320 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x35D DUP2 PUSH2 0x29B JUMP JUMPDEST DUP2 EQ PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x374 DUP2 PUSH2 0x2CD JUMP JUMPDEST DUP2 EQ PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C PUSH31 0x1BC242735E9DD159D70D70BD564473E963A18456F97E61BDAC83BD7F2FA064 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "74:2232:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@depositMoney_72": {
									"entryPoint": 97,
									"id": 72,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawMoney_80": {
									"entryPoint": 471,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_uint256": {
									"entryPoint": 517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 800,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 847,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2466:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "67:95:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "86:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "77:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "150:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "115:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "115:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "115:41:1"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "45:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "53:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "61:5:1",
														"type": ""
													}
												],
												"src": "7:155:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "220:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "230:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "252:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "239:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "239:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "230:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "295:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "268:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "268:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "198:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "206:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "214:5:1",
														"type": ""
													}
												],
												"src": "168:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "404:399:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "450:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "452:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "452:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "452:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "425:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "434:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "446:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "417:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "417:32:1"
															},
															"nodeType": "YulIf",
															"src": "414:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "543:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "558:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "572:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "562:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "587:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "630:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "641:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "626:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "626:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "650:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "597:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "597:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "587:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "678:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "693:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "707:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "697:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "723:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "758:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "769:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "754:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "754:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "778:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "733:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "733:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "723:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "366:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "377:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "389:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "397:6:1",
														"type": ""
													}
												],
												"src": "313:490:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "849:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "859:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "875:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "869:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "869:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "859:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "842:6:1",
														"type": ""
													}
												],
												"src": "809:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "934:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "944:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "967:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "949:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "949:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "944:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "978:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1001:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "983:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "983:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "978:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1141:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1143:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1143:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1143:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1062:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1069:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1137:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1065:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1065:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1059:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:81:1"
															},
															"nodeType": "YulIf",
															"src": "1056:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1173:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1184:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1187:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1180:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1180:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1173:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "921:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "924:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "930:3:1",
														"type": ""
													}
												],
												"src": "890:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1254:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1264:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1293:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1275:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1275:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1264:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1236:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1246:7:1",
														"type": ""
													}
												],
												"src": "1201:104:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1356:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1366:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1381:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1388:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1377:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1377:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1366:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1338:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1348:7:1",
														"type": ""
													}
												],
												"src": "1311:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1488:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1498:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1509:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1498:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1470:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1480:7:1",
														"type": ""
													}
												],
												"src": "1443:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1569:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1579:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1606:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1588:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1588:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1579:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1702:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1704:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1704:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1704:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1627:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1634:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1624:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1624:77:1"
															},
															"nodeType": "YulIf",
															"src": "1621:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1733:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1744:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1751:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1740:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1740:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1733:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1555:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1565:3:1",
														"type": ""
													}
												],
												"src": "1526:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1793:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1810:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1813:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1803:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1803:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1803:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1907:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1910:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1900:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1900:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1900:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1931:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1934:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1924:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1924:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1924:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1765:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2040:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2057:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2060:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2050:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2050:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2050:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1951:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2163:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2180:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2183:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2173:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2173:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2173:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2074:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2248:87:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2313:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2322:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2325:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2315:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2315:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2315:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2271:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2304:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "2278:25:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2278:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2268:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2268:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2261:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2261:51:1"
															},
															"nodeType": "YulIf",
															"src": "2258:71:1"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2241:5:1",
														"type": ""
													}
												],
												"src": "2197:138:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2384:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2441:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2450:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2453:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2443:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2443:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2443:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2407:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2432:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2414:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2414:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2404:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2404:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2397:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2397:43:1"
															},
															"nodeType": "YulIf",
															"src": "2394:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2377:5:1",
														"type": ""
													}
												],
												"src": "2341:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100295760003560e01c806316c05aa21461002e578063f274c89714610038575b600080fd5b610036610061565b005b34801561004457600080fd5b5061005f600480360381019061005a9190610205565b6101d7565b005b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546100b29190610245565b9250508190555060006040518060400160405280348152602001428152509050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154815260200190815260200160002060008201518160000155602082015181600101559050506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008154809291906101cf906102d7565b919050555050565b5050565b6000813590506101ea81610354565b92915050565b6000813590506101ff8161036b565b92915050565b6000806040838503121561021c5761021b61034f565b5b600061022a858286016101db565b925050602061023b858286016101f0565b9150509250929050565b6000610250826102cd565b915061025b836102cd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156102905761028f610320565b5b828201905092915050565b60006102a6826102ad565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006102e2826102cd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561031557610314610320565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b61035d8161029b565b811461036857600080fd5b50565b610374816102cd565b811461037f57600080fd5b5056fea26469706673582212205c7e1bc242735e9dd159d70d70bd564473e963a18456f97e61bdac83bd7f2fa064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16C05AA2 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xF274C897 EQ PUSH2 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36 PUSH2 0x61 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A SWAP2 SWAP1 PUSH2 0x205 JUMP JUMPDEST PUSH2 0x1D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x245 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLVALUE DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 POP DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1CF SWAP1 PUSH2 0x2D7 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EA DUP2 PUSH2 0x354 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FF DUP2 PUSH2 0x36B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21C JUMPI PUSH2 0x21B PUSH2 0x34F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22A DUP6 DUP3 DUP7 ADD PUSH2 0x1DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23B DUP6 DUP3 DUP7 ADD PUSH2 0x1F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x250 DUP3 PUSH2 0x2CD JUMP JUMPDEST SWAP2 POP PUSH2 0x25B DUP4 PUSH2 0x2CD JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x290 JUMPI PUSH2 0x28F PUSH2 0x320 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A6 DUP3 PUSH2 0x2AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E2 DUP3 PUSH2 0x2CD JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x315 JUMPI PUSH2 0x314 PUSH2 0x320 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x35D DUP2 PUSH2 0x29B JUMP JUMPDEST DUP2 EQ PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x374 DUP2 PUSH2 0x2CD JUMP JUMPDEST DUP2 EQ PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C PUSH31 0x1BC242735E9DD159D70D70BD564473E963A18456F97E61BDAC83BD7F2FA064 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "74:2232:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;1200:1012;;;:::i;:::-;;2220:83;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1200:1012;1414:9;1377:8;:20;1386:10;1377:20;;;;;;;;;;;;;;;:33;;;:46;;;;;;;:::i;:::-;;;;;;;;1532:26;1561:39;;;;;;;;1573:9;1561:39;;;;1584:15;1561:39;;;1532:68;;1943:7;1875:8;:20;1884:10;1875:20;;;;;;;;;;;;;;;:29;;:65;1905:8;:20;1914:10;1905:20;;;;;;;;;;;;;;;:34;;;1875:65;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;;2168:8;:20;2177:10;2168:20;;;;;;;;;;;;;;;:34;;;:36;;;;;;;;;:::i;:::-;;;;;;1239:973;1200:1012::o;2220:83::-;;;:::o;7:155:1:-;61:5;99:6;86:20;77:29;;115:41;150:5;115:41;:::i;:::-;7:155;;;;:::o;168:139::-;214:5;252:6;239:20;230:29;;268:33;295:5;268:33;:::i;:::-;168:139;;;;:::o;313:490::-;389:6;397;446:2;434:9;425:7;421:23;417:32;414:119;;;452:79;;:::i;:::-;414:119;572:1;597:61;650:7;641:6;630:9;626:22;597:61;:::i;:::-;587:71;;543:125;707:2;733:53;778:7;769:6;758:9;754:22;733:53;:::i;:::-;723:63;;678:118;313:490;;;;;:::o;890:305::-;930:3;949:20;967:1;949:20;:::i;:::-;944:25;;983:20;1001:1;983:20;:::i;:::-;978:25;;1137:1;1069:66;1065:74;1062:1;1059:81;1056:107;;;1143:18;;:::i;:::-;1056:107;1187:1;1184;1180:9;1173:16;;890:305;;;;:::o;1201:104::-;1246:7;1275:24;1293:5;1275:24;:::i;:::-;1264:35;;1201:104;;;:::o;1311:126::-;1348:7;1388:42;1381:5;1377:54;1366:65;;1311:126;;;:::o;1443:77::-;1480:7;1509:5;1498:16;;1443:77;;;:::o;1526:233::-;1565:3;1588:24;1606:5;1588:24;:::i;:::-;1579:33;;1634:66;1627:5;1624:77;1621:103;;;1704:18;;:::i;:::-;1621:103;1751:1;1744:5;1740:13;1733:20;;1526:233;;;:::o;1765:180::-;1813:77;1810:1;1803:88;1910:4;1907:1;1900:15;1934:4;1931:1;1924:15;2074:117;2183:1;2180;2173:12;2197:138;2278:32;2304:5;2278:32;:::i;:::-;2271:5;2268:43;2258:71;;2325:1;2322;2315:12;2258:71;2197:138;:::o;2341:122::-;2414:24;2432:5;2414:24;:::i;:::-;2407:5;2404:35;2394:63;;2453:1;2450;2443:12;2394:63;2341:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "190400",
								"executionCost": "232",
								"totalCost": "190632"
							},
							"external": {
								"depositMoney()": "infinite",
								"withdrawMoney(address,uint256)": "628"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 74,
									"end": 2306,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 74,
									"end": 2306,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 74,
									"end": 2306,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 74,
									"end": 2306,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 74,
									"end": 2306,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 74,
									"end": 2306,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 74,
									"end": 2306,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 74,
									"end": 2306,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 74,
									"end": 2306,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 74,
									"end": 2306,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 74,
									"end": 2306,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 74,
									"end": 2306,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 74,
									"end": 2306,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 74,
									"end": 2306,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 74,
									"end": 2306,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 74,
									"end": 2306,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 74,
									"end": 2306,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 74,
									"end": 2306,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 74,
									"end": 2306,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 74,
									"end": 2306,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 74,
									"end": 2306,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205c7e1bc242735e9dd159d70d70bd564473e963a18456f97e61bdac83bd7f2fa064736f6c63430008070033",
									".code": [
										{
											"begin": 74,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 74,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74,
											"end": 2306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 74,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 74,
											"end": 2306,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 74,
											"end": 2306,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 74,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 74,
											"end": 2306,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74,
											"end": 2306,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 74,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 74,
											"end": 2306,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 74,
											"end": 2306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "16C05AA2"
										},
										{
											"begin": 74,
											"end": 2306,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 74,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 74,
											"end": 2306,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74,
											"end": 2306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "F274C897"
										},
										{
											"begin": 74,
											"end": 2306,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 74,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 74,
											"end": 2306,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74,
											"end": 2306,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 74,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74,
											"end": 2306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74,
											"end": 2306,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 2212,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1200,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1200,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1200,
											"end": 2212,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1200,
											"end": 2212,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1200,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 2212,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 2212,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1200,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1423,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1377,
											"end": 1385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1396,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1377,
											"end": 1397,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1377,
											"end": 1410,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1377,
											"end": 1410,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1377,
											"end": 1410,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1377,
											"end": 1423,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1377,
											"end": 1423,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1377,
											"end": 1423,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1377,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1377,
											"end": 1423,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1377,
											"end": 1423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1377,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1377,
											"end": 1423,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1377,
											"end": 1423,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1377,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1377,
											"end": 1423,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1377,
											"end": 1423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1377,
											"end": 1423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1377,
											"end": 1423,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1377,
											"end": 1423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1377,
											"end": 1423,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1377,
											"end": 1423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 1558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 1600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1600,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1573,
											"end": 1582,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1600,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1561,
											"end": 1600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1599,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 1600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 1600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1943,
											"end": 1950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1875,
											"end": 1895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1884,
											"end": 1894,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1875,
											"end": 1895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1875,
											"end": 1895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1875,
											"end": 1895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1904,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1875,
											"end": 1904,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1913,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1924,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1939,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1905,
											"end": 1939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1905,
											"end": 1939,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1940,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1940,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1940,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1940,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1940,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1940,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1875,
											"end": 1940,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1875,
											"end": 1950,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1875,
											"end": 1950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1950,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1950,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1950,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1950,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1875,
											"end": 1950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1950,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2177,
											"end": 2187,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2188,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2168,
											"end": 2188,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2188,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2168,
											"end": 2188,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2188,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2202,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2168,
											"end": 2202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2204,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2204,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2204,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2204,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2168,
											"end": 2204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2168,
											"end": 2204,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2168,
											"end": 2204,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2168,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2204,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2204,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1239,
											"end": 2212,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1200,
											"end": 2212,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2220,
											"end": 2303,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 162,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 7,
											"end": 162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 61,
											"end": 66,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 99,
											"end": 105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 86,
											"end": 106,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 115,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 150,
											"end": 155,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 115,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 115,
											"end": 156,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 115,
											"end": 156,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 115,
											"end": 156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 162,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 162,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 162,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 168,
											"end": 307,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 168,
											"end": 307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 219,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 239,
											"end": 259,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 230,
											"end": 259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 230,
											"end": 259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 268,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 295,
											"end": 300,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 268,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 268,
											"end": 301,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 268,
											"end": 301,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 268,
											"end": 301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 168,
											"end": 307,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 168,
											"end": 307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 168,
											"end": 307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 168,
											"end": 307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 168,
											"end": 307,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 313,
											"end": 803,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 313,
											"end": 803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 389,
											"end": 395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 403,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 446,
											"end": 448,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 434,
											"end": 443,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 425,
											"end": 432,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 421,
											"end": 444,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 417,
											"end": 449,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 414,
											"end": 533,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 414,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 414,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 452,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 452,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 452,
											"end": 531,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 452,
											"end": 531,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 452,
											"end": 531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 414,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 414,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 572,
											"end": 573,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 650,
											"end": 657,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 641,
											"end": 647,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 630,
											"end": 639,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 626,
											"end": 648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 597,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 597,
											"end": 658,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 597,
											"end": 658,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 597,
											"end": 658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 587,
											"end": 658,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 587,
											"end": 658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 543,
											"end": 668,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 707,
											"end": 709,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 733,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 778,
											"end": 785,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 769,
											"end": 775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 758,
											"end": 767,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 754,
											"end": 776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 733,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 733,
											"end": 786,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 733,
											"end": 786,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 733,
											"end": 786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 723,
											"end": 786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 723,
											"end": 786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 678,
											"end": 796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 313,
											"end": 803,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 313,
											"end": 803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 313,
											"end": 803,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 313,
											"end": 803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 313,
											"end": 803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 313,
											"end": 803,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 890,
											"end": 1195,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 890,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 930,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 967,
											"end": 968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 949,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 949,
											"end": 969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 944,
											"end": 969,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 944,
											"end": 969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1001,
											"end": 1002,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 983,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1003,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1003,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1138,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1135,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1065,
											"end": 1139,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1062,
											"end": 1063,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1140,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1163,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1056,
											"end": 1163,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1143,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1163,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1056,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1188,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1195,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1195,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1195,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1305,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1201,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1275,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1293,
											"end": 1298,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1275,
											"end": 1299,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1299,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1275,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1305,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1305,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1311,
											"end": 1437,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1311,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1355,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1430,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1381,
											"end": 1386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1431,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1431,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1437,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1437,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1443,
											"end": 1520,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1443,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1487,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1509,
											"end": 1514,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1514,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1514,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1520,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1526,
											"end": 1759,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1526,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1565,
											"end": 1568,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1606,
											"end": 1611,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1588,
											"end": 1612,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1588,
											"end": 1612,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1588,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1612,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1634,
											"end": 1700,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1627,
											"end": 1632,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1701,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1724,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1621,
											"end": 1724,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1704,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 1722,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1704,
											"end": 1722,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1704,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1724,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1621,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1751,
											"end": 1752,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1744,
											"end": 1749,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1740,
											"end": 1753,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1759,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1759,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1759,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1526,
											"end": 1759,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1765,
											"end": 1945,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1890,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1810,
											"end": 1811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1803,
											"end": 1891,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 1914,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1907,
											"end": 1908,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1934,
											"end": 1938,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1931,
											"end": 1932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1939,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2191,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2074,
											"end": 2191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2184,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2181,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2335,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2197,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2304,
											"end": 2309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2278,
											"end": 2310,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2278,
											"end": 2310,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2278,
											"end": 2310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2311,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2258,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2258,
											"end": 2329,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2326,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2323,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2315,
											"end": 2327,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2258,
											"end": 2329,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2258,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2335,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2341,
											"end": 2463,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2341,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2414,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2432,
											"end": 2437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2414,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2414,
											"end": 2438,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2414,
											"end": 2438,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2414,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2407,
											"end": 2412,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2439,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2394,
											"end": 2457,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2453,
											"end": 2454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2451,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2443,
											"end": 2455,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2457,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2394,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2341,
											"end": 2463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2341,
											"end": 2463,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"depositMoney()": "16c05aa2",
							"withdrawMoney(address,uint256)": "f274c897"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"depositMoney\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawMoney\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ExampleMappingStruct.sol\":\"MappingStructExample\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ExampleMappingStruct.sol\":{\"keccak256\":\"0xa34f133b099b554f406af4d3faf3228bc98cd833ff9068efea4dff8d392ac070\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6a8b5ace421f0418d51a73f1e4ae6c61803ac02baef7a9d50d28112d318741f2\",\"dweb:/ipfs/QmcGZvXCEQdZgY45THBj6g6omNc5YerSQXgvZQxtkZWdsa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 28,
								"contract": "contracts/ExampleMappingStruct.sol:MappingStructExample",
								"label": "balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(Balance)23_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Balance)23_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct MappingStructExample.Balance)",
								"numberOfBytes": "32",
								"value": "t_struct(Balance)23_storage"
							},
							"t_mapping(t_uint256,t_struct(Transaction)6_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct MappingStructExample.Transaction)",
								"numberOfBytes": "32",
								"value": "t_struct(Transaction)6_storage"
							},
							"t_struct(Balance)23_storage": {
								"encoding": "inplace",
								"label": "struct MappingStructExample.Balance",
								"members": [
									{
										"astId": 8,
										"contract": "contracts/ExampleMappingStruct.sol:MappingStructExample",
										"label": "totalBalance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 10,
										"contract": "contracts/ExampleMappingStruct.sol:MappingStructExample",
										"label": "numOfDeposits",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 15,
										"contract": "contracts/ExampleMappingStruct.sol:MappingStructExample",
										"label": "deposits",
										"offset": 0,
										"slot": "2",
										"type": "t_mapping(t_uint256,t_struct(Transaction)6_storage)"
									},
									{
										"astId": 17,
										"contract": "contracts/ExampleMappingStruct.sol:MappingStructExample",
										"label": "numOfWithdrawals",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 22,
										"contract": "contracts/ExampleMappingStruct.sol:MappingStructExample",
										"label": "withdrawals",
										"offset": 0,
										"slot": "4",
										"type": "t_mapping(t_uint256,t_struct(Transaction)6_storage)"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(Transaction)6_storage": {
								"encoding": "inplace",
								"label": "struct MappingStructExample.Transaction",
								"members": [
									{
										"astId": 3,
										"contract": "contracts/ExampleMappingStruct.sol:MappingStructExample",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 5,
										"contract": "contracts/ExampleMappingStruct.sol:MappingStructExample",
										"label": "timestamp",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/ExampleMappingStruct.sol": {
				"ast": {
					"absolutePath": "contracts/ExampleMappingStruct.sol",
					"exportedSymbols": {
						"MappingStructExample": [
							81
						]
					},
					"id": 82,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 81,
							"linearizedBaseContracts": [
								81
							],
							"name": "MappingStructExample",
							"nameLocation": "83:20:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "MappingStructExample.Transaction",
									"id": 6,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "361:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "356:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "356:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "383:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "378:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "378:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Transaction",
									"nameLocation": "265:11:0",
									"nodeType": "StructDefinition",
									"scope": 81,
									"src": "258:142:0",
									"visibility": "public"
								},
								{
									"canonicalName": "MappingStructExample.Balance",
									"id": 23,
									"members": [
										{
											"constant": false,
											"id": 8,
											"mutability": "mutable",
											"name": "totalBalance",
											"nameLocation": "606:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "601:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 7,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "601:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 10,
											"mutability": "mutable",
											"name": "numOfDeposits",
											"nameLocation": "636:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "631:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "631:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 15,
											"mutability": "mutable",
											"name": "deposits",
											"nameLocation": "841:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "812:37:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Transaction_$6_storage_$",
												"typeString": "mapping(uint256 => struct MappingStructExample.Transaction)"
											},
											"typeName": {
												"id": 14,
												"keyType": {
													"id": 11,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "820:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "812:28:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Transaction_$6_storage_$",
													"typeString": "mapping(uint256 => struct MappingStructExample.Transaction)"
												},
												"valueType": {
													"id": 13,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 12,
														"name": "Transaction",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "828:11:0"
													},
													"referencedDeclaration": 6,
													"src": "828:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Transaction_$6_storage_ptr",
														"typeString": "struct MappingStructExample.Transaction"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 17,
											"mutability": "mutable",
											"name": "numOfWithdrawals",
											"nameLocation": "867:16:0",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "862:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 16,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "862:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "withdrawals",
											"nameLocation": "1079:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "1050:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Transaction_$6_storage_$",
												"typeString": "mapping(uint256 => struct MappingStructExample.Transaction)"
											},
											"typeName": {
												"id": 21,
												"keyType": {
													"id": 18,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1058:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "1050:28:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Transaction_$6_storage_$",
													"typeString": "mapping(uint256 => struct MappingStructExample.Transaction)"
												},
												"valueType": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "Transaction",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 6,
														"src": "1066:11:0"
													},
													"referencedDeclaration": 6,
													"src": "1066:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Transaction_$6_storage_ptr",
														"typeString": "struct MappingStructExample.Transaction"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Balance",
									"nameLocation": "415:7:0",
									"nodeType": "StructDefinition",
									"scope": 81,
									"src": "408:690:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 28,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "1183:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "1155:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$23_storage_$",
										"typeString": "mapping(address => struct MappingStructExample.Balance)"
									},
									"typeName": {
										"id": 27,
										"keyType": {
											"id": 24,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1163:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1155:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$23_storage_$",
											"typeString": "mapping(address => struct MappingStructExample.Balance)"
										},
										"valueType": {
											"id": 26,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 25,
												"name": "Balance",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 23,
												"src": "1174:7:0"
											},
											"referencedDeclaration": 23,
											"src": "1174:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Balance_$23_storage_ptr",
												"typeString": "struct MappingStructExample.Balance"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "1239:973:0",
										"statements": [
											{
												"expression": {
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 31,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "1377:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$23_storage_$",
																	"typeString": "mapping(address => struct MappingStructExample.Balance storage ref)"
																}
															},
															"id": 34,
															"indexExpression": {
																"expression": {
																	"id": 32,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1386:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1386:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1377:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Balance_$23_storage",
																"typeString": "struct MappingStructExample.Balance storage ref"
															}
														},
														"id": 35,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "1377:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 36,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1414:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1414:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1377:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "1377:46:0"
											},
											{
												"assignments": [
													42
												],
												"declarations": [
													{
														"constant": false,
														"id": 42,
														"mutability": "mutable",
														"name": "deposit",
														"nameLocation": "1551:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 71,
														"src": "1532:26:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Transaction_$6_memory_ptr",
															"typeString": "struct MappingStructExample.Transaction"
														},
														"typeName": {
															"id": 41,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 40,
																"name": "Transaction",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 6,
																"src": "1532:11:0"
															},
															"referencedDeclaration": 6,
															"src": "1532:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Transaction_$6_storage_ptr",
																"typeString": "struct MappingStructExample.Transaction"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 49,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 44,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1573:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1573:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 46,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1584:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1584:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 43,
														"name": "Transaction",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "1561:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Transaction_$6_storage_ptr_$",
															"typeString": "type(struct MappingStructExample.Transaction storage pointer)"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1561:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Transaction_$6_memory_ptr",
														"typeString": "struct MappingStructExample.Transaction memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1532:68:0"
											},
											{
												"expression": {
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 50,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "1875:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$23_storage_$",
																		"typeString": "mapping(address => struct MappingStructExample.Balance storage ref)"
																	}
																},
																"id": 53,
																"indexExpression": {
																	"expression": {
																		"id": 51,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1884:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 52,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1884:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1875:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Balance_$23_storage",
																	"typeString": "struct MappingStructExample.Balance storage ref"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 15,
															"src": "1875:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Transaction_$6_storage_$",
																"typeString": "mapping(uint256 => struct MappingStructExample.Transaction storage ref)"
															}
														},
														"id": 60,
														"indexExpression": {
															"expression": {
																"baseExpression": {
																	"id": 55,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "1905:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$23_storage_$",
																		"typeString": "mapping(address => struct MappingStructExample.Balance storage ref)"
																	}
																},
																"id": 58,
																"indexExpression": {
																	"expression": {
																		"id": 56,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1914:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1914:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1905:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Balance_$23_storage",
																	"typeString": "struct MappingStructExample.Balance storage ref"
																}
															},
															"id": 59,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "numOfDeposits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 10,
															"src": "1905:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1875:65:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Transaction_$6_storage",
															"typeString": "struct MappingStructExample.Transaction storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 61,
														"name": "deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "1943:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Transaction_$6_memory_ptr",
															"typeString": "struct MappingStructExample.Transaction memory"
														}
													},
													"src": "1875:75:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Transaction_$6_storage",
														"typeString": "struct MappingStructExample.Transaction storage ref"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "1875:75:0"
											},
											{
												"expression": {
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "2168:36:0",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 64,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "2168:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$23_storage_$",
																	"typeString": "mapping(address => struct MappingStructExample.Balance storage ref)"
																}
															},
															"id": 67,
															"indexExpression": {
																"expression": {
																	"id": 65,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2177:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2177:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2168:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Balance_$23_storage",
																"typeString": "struct MappingStructExample.Balance storage ref"
															}
														},
														"id": 68,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "numOfDeposits",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "2168:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "2168:36:0"
											}
										]
									},
									"functionSelector": "16c05aa2",
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositMoney",
									"nameLocation": "1209:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1239:0:0"
									},
									"scope": 81,
									"src": "1200:1012:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2285:18:0",
										"statements": []
									},
									"functionSelector": "f274c897",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawMoney",
									"nameLocation": "2229:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "2259:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2243:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2243:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2269:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2264:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2264:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2242:35:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2285:0:0"
									},
									"scope": 81,
									"src": "2220:83:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 82,
							"src": "74:2232:0",
							"usedErrors": []
						}
					],
					"src": "39:2267:0"
				},
				"id": 0
			}
		}
	}
}